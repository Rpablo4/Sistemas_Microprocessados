/*
Funções necessarias:
Mostrar o horário
Mostrar data
Função de Alarme
*/

#include <16F874A.h>
#use delay(clock=4000000)
#include <lcd.c>
#FUSES XT

int ler()
{
int tcl=13;
while(tcl==13)
{
output_high(pin_b0); //Nível ALTO na linha A
if (input(pin_a0)==0b1)
tcl=1;
if (input(pin_a1)==0b1)
tcl=2;
if (input(pin_a2)==0b1)
tcl=3;
output_low(pin_b0); //Nível baixo na linha A
output_high(pin_b1); //Nível ALTO na linha B
if (input(pin_a0)==0b1)
tcl=4;
if (input(pin_a1)==0b1)
tcl=5;
if (input(pin_a2)==0b1)
tcl=6;
output_low(pin_b1); //Nível baixo na linha B
output_high(pin_b2); //Nível ALTO na linha C
if (input(pin_a0)==0b1)
tcl=7;
if (input(pin_a1)==0b1)
tcl=8;
if (input(pin_a2)==0b1)
tcl=9;
output_low(pin_b2); //Nível baixo na linha C
output_high(pin_b3);
if (input(pin_a1)==0b1)
tcl=0;
}
return(tcl);
}

int hora, min, seg, dig1, dig2;

//Verifica validade dos valores


void valida_seg (int seg) {

     if ( seg > 59 ) {
     lcd_putc("\fvalor invalido!\ntente nov");
    
     }
     else{
     printf(lcd_putc,"\n%u",seg);
     }
}

void define_hora(){
DefineHora:
   lcd_putc("\fDefina a hora:\nH=");
   dig1=ler();
   delay_ms(300);
   printf(lcd_putc,"\nH=%u",dig1);
   dig2=ler();
   delay_ms(300);
   printf(lcd_putc,"\nH=%u%u",dig1,dig2);
   hora=(dig2+dig1*10);
   if ( hora > 23 ) {
     lcd_putc("\fvalor invalido!\ntente nov");
     delay_ms(1000);
     goto DefineHora;
     }
     else{
     printf(lcd_putc,"\nH=%u",hora);
     }
}
void define_min(){
DefineMin:
   lcd_putc("\fDefina o min:\nM=");
   dig1=ler();
   delay_ms(300);
   printf(lcd_putc,"\nM=%u",dig1);
   dig2=ler();
   delay_ms(300);
   printf(lcd_putc,"\nM=%u%u",dig1,dig2);
   min=(dig2+dig1*10);
     if ( min > 59 ) {
     lcd_putc("\fvalor invalido!\ntente nov");
     delay_ms(1000);
     goto DefineMin;
     }
     else{
     printf(lcd_putc,"\nM=%u",min);
     }
}
void define_seg(){

   lcd_putc("\fDefina o seg:\nS=");
   dig1=ler();
   delay_ms(300);
   printf(lcd_putc,"\nS=%u",dig1);
   dig2=ler();
   delay_ms(300);
   printf(lcd_putc,"\nS=%u%u",dig1,dig2);
   seg=(dig2+dig1*10);
   valida_seg(seg);
}

void main(){

lcd_init();
define_hora();
define_min();
define_seg();

/*
      Este laço repetidor funciona como contador
      Vai incrementando até que atinge o número máximo
      em cada operação.
*/    
     while ( true ) {
     printf(lcd_putc,"\fH - M - S\n%u - %u - %u",hora, min, seg);
         delay_ms( 1000 );
         seg++;
         if ( seg > 59 ) {
              seg = 0;
              min++;
         }
         if ( min > 59 ) {
              min = 0;
              hora++;
         }
         if ( hora > 23 ) {
              hora = 0;
         }
     }
     }
